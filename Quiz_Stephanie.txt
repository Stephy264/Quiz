--PART I

-- 1. Create a tablespace with name 'quiz' and three datafiles. Each datafile of 15Mb.

CREATE TABLESPACE quiz
    DATAFILE 'data1.dbf' SIZE 15M 
;

ALTER TABLESPACE quiz ADD
    DATAFILE 'data2.dbf' SIZE 15M
;

ALTER TABLESPACE quiz ADD
    DATAFILE 'data3.dbf' SIZE 15M
;


-- 2. Create an user named "usuario_1" with password "usuario_1". 
	-- The user should be able to connect
	--- The user should has the profile "student"


CREATE PROFILE student LIMIT
    IDLE_TIME 30;

ALTER PROFILE student LIMIT SESSIONS_PER_USER 2;

ALTER PROFILE student LIMIT CPU_PER_SESSION UNLIMITED;


-- 3. Create an user named "usuario_1" with password "usuario_1". 
	-- The user should be able to connect
	-- The user should has the profile "student"
	-- The user should be associated to the tablespace "quiz"
	-- The user should be able to create tables WITHOUT USING THE DBA ROLE.
    
CREATE USER usuario_1
    IDENTIFIED BY usuario_1
    DEFAULT TABLESPACE quiz
    PROFILE student
;

 
 GRANT CREATE SESSION,CREATE TABLE TO usuario_1;
 
 
-- 4. Create an user named "usuario_2" with password "usuario_2"
	-- The user should be able to connect
	-- The user should has the profile "student"
	-- The user should be associated to the tablespace "quiz"
	-- The user shouldn't be able to create tables.
    
CREATE USER usuario_2
    IDENTIFIED BY usuario_2
    DEFAULT TABLESPACE quiz
    PROFILE student
;

GRANT CREATE SESSION TO usuario_2;


--PART II

--With the usuario_1 create the next table (DON'T CHANGE THE NAME OF THE TABLE NOR COLUMNS:

create table attacks (
	id INT,
	url VARCHAR(2048),
	ip_address VARCHAR(20),
	number_of_attacks INT,
	time_of_last_attack TIMESTAMP
);


-- 2. Import this data 
--(The format of the date is "YYYY-MM-DD HH24:MI:SS"): https://gist.github.com/amartinezg/6c2c27ae630102dbfb499ed22b338dd8




-- 3. Give permission to view table "attacks" of the usuario_2 (Do selects)



--PART III

--Queries: 

--1. Count the urls which have been attacked and have the protocol 'https'


SELECT
    COUNT(0) TOTAL
FROM
    attacks
WHERE
    URL LIKE '%http%'
;

-- 2. List the records where the URL attacked matches with google (it does not matter if it is google.co.jp, google.es, 
-- google.pt, etc) order by number of attacks ascendent

SELECT
    * FROM attacks  
WHERE
    URL LIKE '%google%'
ORDER BY
    NUMBER_OF_ATTACKS DESC
;


-- 3. List the ip addresses and the time of the last attack if the attack has been 
-- produced the last year (2017) (Hint: https://stackoverflow.com/a/30071091)


SELECT
    IP_ADDRESS
    ,TO_CHAR(TIME_OF_LAST_ATTACK,'HH:MM:SS') HORA
    ,TO_CHAR(TIME_OF_LAST_ATTACK,'YYYY') HORA
FROM
    attacks  
WHERE
    TO_CHAR(TIME_OF_LAST_ATTACK,'YYYY') = 2017
;

-- 4. Show the first IP Adress which has been registered with the minimum number of attacks 

SELECT
    * FROM
(SELECT
        IP_ADDRESS,ROW_NUMBER() OVER (ORDER BY NUMBER_OF_ATTACKS desc) rn,NUMBER_OF_ATTACKS
    FROM
        attacks  
    WHERE
        TO_CHAR(TIME_OF_LAST_ATTACK,'YYYY') = 2017
) T1
WHERE
    RN = 1
;

-- 5. Show the ip address and the number of attacks if instagram has been attack using https protocol

SELECT
    COUNT(0) TOTAL
FROM
    attacks
WHERE
    URL LIKE '%instagram%'
   ;
   
   
   
   SELECT
    IP_ADDRESS
FROM
    attacks
WHERE
    URL LIKE '%instagram%'
   ;